#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <sstream>

using namespace std;

class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        if (strs.size() == 0) {
            return "";
        }
        if (strs.size() == 1) {
            return strs[0];
        }
        int size = strs.size();
        string result = strs[0];
        for (int i=1; i<size; ++i) {
            result = this->common(result, strs[i]);
            if (result.empty()) {
                break;
            }
        }
        return result;
    }

    string common(const string& str1, const string& str2) {
        int begin = 0;
        int len1 = str1.size();
        int len2 = str2.size();
        while (begin < len1 && begin < len2) {
            if (str1[begin] != str2[begin]) {
                break;
            }
            ++begin;
        }
        return str1.substr(0, begin);
    }
};



int main() {
    Solution solution;
    vector<string> data{"flower","flow","flight"};
    cout << solution.longestCommonPrefix(data);

}




