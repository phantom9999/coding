#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <cmath>
#include <sstream>

using namespace std;


struct TreeNode {
      int val;
      TreeNode *left;
      TreeNode *right;
      TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return addNode(nums, 0, nums.size() - 1);
    }

    TreeNode* addNode(vector<int>& nums, int begin, int end) {
        if (begin > end) {
            return nullptr;
        }
        int mid = (begin + end) / 2;
        int value = nums[mid];
        TreeNode* node = new TreeNode(value);
        node->left = addNode(nums, begin, mid-1);
        node->right = addNode(nums, mid+1, end);
        return node;
    }
};

int main() {
    Solution solution;
    vector<int> data{-10,-3,0,5,9};
    solution.sortedArrayToBST(data);
}
