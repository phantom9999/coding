class Solution {
public:
    int romanToInt(string s) {
        // 找出最大
        int length = (int) s.length();
        int *list = new int[length];
        for (unsigned long i=0;i<s.length();++i) {
            list[i] = get(s[i]);
        }

        int index = 0;
        int all = 0;
        while (index < length) {
            if (index + 1 <length) {
                if (list[index] < list[index+1]){
                    all += list[index+1]-list[index];
                    index += 2;
                } else {
                    all += list[index];
                    ++index;
                }
            } else {
                // 最后一个
                all += list[index];
                ++index;
            }
        }

        return all;
    }

    int get(char ch) {
        switch (ch) {
            case 'I':
                return 1;
            case 'V':
                return 5;
            case 'X':
                return 10;
            case 'L':
                return 50;
            case 'C':
                return 100;
            case 'D':
                return 500;
            case 'M':
                return 1000;
            default:
                return 0;
        }
    }
};
